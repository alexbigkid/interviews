name: Android Deploy to Play Store

on:
  workflow_dispatch:
    inputs:
      build_number:
        description: 'Build number to deploy (from android-build workflow)'
        required: true
        type: string
      deployment_environment:
        description: 'Deployment target'
        required: true
        default: 'production'
        type: choice
        options:
          - production
          - beta
          - alpha
          - internal

env:
  FASTLANE_SKIP_UPDATE_CHECK: "1"
  FASTLANE_HIDE_GITHUB_ISSUES: "1"

jobs:
  deploy-to-play-store:
    runs-on: ubuntu-latest
    environment: 
      name: ${{ github.event.inputs.deployment_environment }}
      url: https://play.google.com/console
    defaults:
      run:
        working-directory: ./android-hello-world
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.1'
          bundler-cache: true
          working-directory: ./android-hello-world

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: android-release-build-${{ github.event.inputs.build_number }}
          path: ./android-hello-world/

      - name: Setup Google Play Service Account
        env:
          GOOGLE_PLAY_JSON_KEY_DATA: ${{ secrets.GOOGLE_PLAY_JSON_KEY_DATA }}
        run: |
          echo "$GOOGLE_PLAY_JSON_KEY_DATA" > google-play-service-account.json

      - name: Deploy to Internal Track
        if: github.event.inputs.deployment_environment == 'internal'
        env:
          ANDROID_PACKAGE_NAME: ${{ secrets.ANDROID_PACKAGE_NAME }}
          GOOGLE_PLAY_JSON_KEY_PATH: "./google-play-service-account.json"
        run: |
          AAB_FILE=$(find . -name "*.aab" | head -1)
          if [ -n "$AAB_FILE" ]; then
            bundle exec fastlane run upload_to_play_store track:internal aab:"$AAB_FILE" json_key:"$GOOGLE_PLAY_JSON_KEY_PATH"
          else
            echo "No AAB file found in artifacts"
            exit 1
          fi

      - name: Deploy to Alpha Track
        if: github.event.inputs.deployment_environment == 'alpha'
        env:
          ANDROID_PACKAGE_NAME: ${{ secrets.ANDROID_PACKAGE_NAME }}
          GOOGLE_PLAY_JSON_KEY_PATH: "./google-play-service-account.json"
        run: |
          AAB_FILE=$(find . -name "*.aab" | head -1)
          if [ -n "$AAB_FILE" ]; then
            bundle exec fastlane run upload_to_play_store track:alpha aab:"$AAB_FILE" json_key:"$GOOGLE_PLAY_JSON_KEY_PATH"
          else
            echo "No AAB file found in artifacts"
            exit 1
          fi

      - name: Deploy to Beta Track
        if: github.event.inputs.deployment_environment == 'beta'
        env:
          ANDROID_PACKAGE_NAME: ${{ secrets.ANDROID_PACKAGE_NAME }}
          GOOGLE_PLAY_JSON_KEY_PATH: "./google-play-service-account.json"
        run: |
          AAB_FILE=$(find . -name "*.aab" | head -1)
          if [ -n "$AAB_FILE" ]; then
            bundle exec fastlane run upload_to_play_store track:beta aab:"$AAB_FILE" json_key:"$GOOGLE_PLAY_JSON_KEY_PATH"
          else
            echo "No AAB file found in artifacts"
            exit 1
          fi

      - name: Deploy to Production
        if: github.event.inputs.deployment_environment == 'production'
        env:
          ANDROID_PACKAGE_NAME: ${{ secrets.ANDROID_PACKAGE_NAME }}
          GOOGLE_PLAY_JSON_KEY_PATH: "./google-play-service-account.json"
        run: |
          AAB_FILE=$(find . -name "*.aab" | head -1)
          if [ -n "$AAB_FILE" ]; then
            # Deploy to production but don't auto-release (requires manual review)
            bundle exec fastlane run upload_to_play_store track:production aab:"$AAB_FILE" json_key:"$GOOGLE_PLAY_JSON_KEY_PATH" release_status:draft
          else
            echo "No AAB file found in artifacts"
            exit 1
          fi

      - name: Cleanup sensitive files
        if: always()
        run: |
          rm -f google-play-service-account.json

      - name: Create deployment summary
        run: |
          echo "## Android Deployment Summary" >> $GITHUB_STEP_SUMMARY
          echo "- **Environment:** ${{ github.event.inputs.deployment_environment }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Build Number:** ${{ github.event.inputs.build_number }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Deployment Time:** $(date)" >> $GITHUB_STEP_SUMMARY
          echo "- **Package Name:** ${{ secrets.ANDROID_PACKAGE_NAME }}" >> $GITHUB_STEP_SUMMARY
          
          case "${{ github.event.inputs.deployment_environment }}" in
            production)
              echo "- **Status:** Uploaded to Play Store Production (draft - manual review required)" >> $GITHUB_STEP_SUMMARY
              ;;
            beta)
              echo "- **Status:** Deployed to Play Store Beta Track" >> $GITHUB_STEP_SUMMARY
              ;;
            alpha)
              echo "- **Status:** Deployed to Play Store Alpha Track" >> $GITHUB_STEP_SUMMARY
              ;;
            internal)
              echo "- **Status:** Deployed to Play Store Internal Track" >> $GITHUB_STEP_SUMMARY
              ;;
          esac